// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: validator.proto

package s12proto // import "github.com/SafetyCulture/s12-proto/protobuf/s12proto"

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/gogo/protobuf/protoc-gen-gogo/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type FieldValidator struct {
	// Field value validates to a 128 bit universally unique identifier
	Uuid bool `protobuf:"varint,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Uses a Golang RE2-syntax regex to match the field contents.
	Regex                string   `protobuf:"bytes,2,opt,name=regex,proto3" json:"regex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldValidator) Reset()         { *m = FieldValidator{} }
func (m *FieldValidator) String() string { return proto.CompactTextString(m) }
func (*FieldValidator) ProtoMessage()    {}
func (*FieldValidator) Descriptor() ([]byte, []int) {
	return fileDescriptor_validator_aafeea0b80d863d6, []int{0}
}
func (m *FieldValidator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldValidator.Unmarshal(m, b)
}
func (m *FieldValidator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldValidator.Marshal(b, m, deterministic)
}
func (dst *FieldValidator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldValidator.Merge(dst, src)
}
func (m *FieldValidator) XXX_Size() int {
	return xxx_messageInfo_FieldValidator.Size(m)
}
func (m *FieldValidator) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldValidator.DiscardUnknown(m)
}

var xxx_messageInfo_FieldValidator proto.InternalMessageInfo

func (m *FieldValidator) GetUuid() bool {
	if m != nil {
		return m.Uuid
	}
	return false
}

func (m *FieldValidator) GetRegex() string {
	if m != nil {
		return m.Regex
	}
	return ""
}

var E_Field = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*FieldValidator)(nil),
	Field:         65020,
	Name:          "validator.field",
	Tag:           "bytes,65020,opt,name=field",
	Filename:      "validator.proto",
}

func init() {
	proto.RegisterType((*FieldValidator)(nil), "validator.FieldValidator")
	proto.RegisterExtension(E_Field)
}

func init() { proto.RegisterFile("validator.proto", fileDescriptor_validator_aafeea0b80d863d6) }

var fileDescriptor_validator_aafeea0b80d863d6 = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4b, 0xcc, 0xc9,
	0x4c, 0x49, 0x2c, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x48,
	0x29, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0x25, 0x92, 0x4a, 0xd3, 0xf4, 0x53, 0x52,
	0x8b, 0x93, 0x8b, 0x32, 0x0b, 0xe0, 0x8a, 0x95, 0xac, 0xb8, 0xf8, 0xdc, 0x32, 0x53, 0x73, 0x52,
	0xc2, 0x60, 0x7a, 0x84, 0x84, 0xb8, 0x58, 0x4a, 0x4b, 0x33, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x82, 0xc0, 0x6c, 0x21, 0x11, 0x2e, 0xd6, 0xa2, 0xd4, 0xf4, 0xd4, 0x0a, 0x09, 0x26, 0x05,
	0x46, 0x0d, 0xce, 0x20, 0x08, 0xc7, 0x2a, 0x80, 0x8b, 0x35, 0x0d, 0xa4, 0x57, 0x48, 0x56, 0x0f,
	0x62, 0x8f, 0x1e, 0xcc, 0x1e, 0x3d, 0xb0, 0x99, 0xfe, 0x05, 0x25, 0x99, 0xf9, 0x79, 0xc5, 0x12,
	0x7f, 0x7e, 0x33, 0x2b, 0x30, 0x6a, 0x70, 0x1b, 0x49, 0xea, 0x21, 0x9c, 0x8a, 0x6a, 0x69, 0x10,
	0xc4, 0x20, 0x27, 0xb3, 0x28, 0x93, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c,
	0xfd, 0xe0, 0xc4, 0xb4, 0xd4, 0x92, 0x4a, 0xe7, 0xd2, 0x9c, 0x92, 0xd2, 0xa2, 0x54, 0xfd, 0x62,
	0x43, 0x23, 0x5d, 0xb0, 0xf9, 0x08, 0xdf, 0x14, 0x1b, 0x1a, 0x41, 0xd8, 0x6c, 0x60, 0xca, 0x18,
	0x10, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x31, 0x38, 0x25, 0x0c, 0x01, 0x00, 0x00,
}
